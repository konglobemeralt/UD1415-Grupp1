 $selection = `ls -sl -type "transform"`;
 string $shapes[] = `listRelatives -children -shapes $selection[0]`;
 print($selection);


$selection = `ls -sl -type "transform"`;
    string $mesh;
    string $shapes[] = `listRelatives -children -shapes $selection[0]`;
      
    for ($mesh in $selection) 
    {
        print ("\n");
        print ("\n");
        string $shapes[] = `listRelatives -s -path $mesh`;
        //print $shapes[0]; //pCubeShape
        print ("\n");
        
        string $parents[] = `listRelatives -allParents $mesh`;
       
       
       int $numVertsArray[] = `polyEvaluate -v`;
       
       int $numVerts = $numVertsArray[0];
       print ($numVerts);
       //(int)$numVertsString;
       
       
       int $i = 0;          
       while($i != $numVerts)
       {
       print ("\n");
       print ($shapes[0]+".pt["+$i+"].px");
       string $verString =  $shapes[0]+".pt["+$i+"].px";
       setAttr -lock true $verString;
       print ("\n");
       
       print ("\n");  
       print ($shapes[0]+".pt["+$i+"].py");
       string $verString =  $shapes[0]+".pt["+$i+"].py";
       setAttr -lock true $verString;
       print ("\n");
       
       print ("\n");
       print ($shapes[0]+".pt["+$i+"].pz");
       string $verString =  $shapes[0]+".pt["+$i+"].pz";
       setAttr -lock true $verString;
       print ("\n");
       $i++;
       } 
       
        
    }
